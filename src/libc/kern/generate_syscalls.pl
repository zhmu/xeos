#!/usr/bin/perl

open (O, "+>syscalls.c") or die "Unable to create syscalls.c";
open (F, "<SYSCALLS") or die "Unable to open SYSCALLS file";
printf O "/*
 *
 * syscalls.c
 *
 * This file lists all exported syscalls.
 *
 * AUTOMAGICALLY GENERATED BY generate_syscalls.pl - DO NOT MODIFY!
 *
 */

#include <sys/types.h>
#include <sys/device.h>
#include <sys/mailbox.h>
#include <kern/syscall.h>

";
while (<F>) {
	chop;
	if (/^E/) {
		s/^E://;
		printf O "extern uint32_t $_;\n";
	}	else {
		($no, $retval, $name, $args) = split (/\t/);
		if ((!/^#/) and ($no ne "")) {
			$args=~ s/\((.*)\)/$1/; $al="";
			@sa = split(/,/, $args); $cnt = 1;
			foreach $s (@sa) {
				$v=$s;$v=~ s/(.*) (.*)/$2/;
				$al .= ",$v";
				$cnt++;
			}
			for ($i = $cnt; $i < 5; $i++) {
				$al .= ",0";
			}
			if ($retval eq "void") {
				printf O "$retval $name($args) { __SYSCALL ($no$al); }\n";
			} else {
				printf O "$retval $name($args) { return ($retval)__SYSCALL ($no$al); }\n";
			}
		}
	}
}
close(C);
close(O);

# vim:set ts=2 sw=2:
